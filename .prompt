# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Prompt taken from Matthias Bynen's dotfiles
# https://raw.githubusercontent.com/mathiasbynens/dotfiles/master/LICENSE-MIT.txt
prompt_git() {
	local s='';
	local branchName='';

	# Check if the current directory is in a Git repository.
	git rev-parse --is-inside-work-tree &>/dev/null || return;

	# Check for what branch we’re on.
	# Get the short symbolic ref. If HEAD isn’t a symbolic ref, get a
	# tracking remote branch or tag. Otherwise, get the
	# short SHA for the latest commit, or give up.
	branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
		git describe --all --exact-match HEAD 2> /dev/null || \
		git rev-parse --short HEAD 2> /dev/null || \
		echo '(unknown)')";

	# Early exit for Chromium & Blink repo, as the dirty check takes too long.
	# Thanks, @paulirish!
	# https://github.com/paulirish/dotfiles/blob/dd33151f/.bash_prompt#L110-L123
	repoUrl="$(git config --get remote.origin.url)";
	if grep -q 'chromium/src.git' <<< "${repoUrl}"; then
		s+='*';
	else
		# Check for uncommitted changes in the index.
		if ! $(git diff --quiet --ignore-submodules --cached); then
			s+='+';
		fi;
		# Check for unstaged changes.
		if ! $(git diff-files --quiet --ignore-submodules --); then
			s+='!';
		fi;
		# Check for untracked files.
		if [ -n "$(git ls-files --others --exclude-standard)" ]; then
			s+='?';
		fi;
		# Check for stashed files.
		if $(git rev-parse --verify refs/stash &>/dev/null); then
			s+='$';
		fi;
	fi;

	[ -n "${s}" ] && s=" [${s}]";

	echo -e "${1}${branchName}${2}${s}";
}

reset="\e[0m"
fg_white="\e[1;38;5;255m"
fg_cyan="\e[1;38;5;117m"
fg_green="\e[1;38;5;84m"
fg_orange="\e[1;38;5;215m"
fg_pink="\e[1;38;5;212m"
fg_purple="\e[1;38;5;141m"
fg_red="\e[1;38;5;203m"
fg_yellow="\e[1;38;5;228m"

user="${fg_green}"
prompt='$'
if [[ "${USER}" == "root" ]]; then
    user="${fg_red}"
	prompt='#'
fi;

PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]"
PS1+="${debian_chroot:+($debian_chroot)}"
PS1+="\[${user}\]\u@\h\[${reset}\]"
PS1+=" \[${fg_cyan}\]\w\[${reset}\]"
PS1+="\$(prompt_git \"\[${fg_white}\] on \[${fg_purple}\]\" \"\[${fg_yellow}\]\")";
PS1+="\n"
PS1+="\[${fg_white}\]${prompt} \[${reset}\]"
